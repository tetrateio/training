// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListAccountsHandlerFunc turns a function with the right signature into a list accounts handler
type ListAccountsHandlerFunc func(ListAccountsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListAccountsHandlerFunc) Handle(params ListAccountsParams) middleware.Responder {
	return fn(params)
}

// ListAccountsHandler interface for that can handle valid list accounts params
type ListAccountsHandler interface {
	Handle(ListAccountsParams) middleware.Responder
}

// NewListAccounts creates a new http.Handler for the list accounts operation
func NewListAccounts(ctx *middleware.Context, handler ListAccountsHandler) *ListAccounts {
	return &ListAccounts{Context: ctx, Handler: handler}
}

/*ListAccounts swagger:route GET /users/{username}/accounts accounts listAccounts

Lists all accounts for a given customer

Lists all accounts for a given customer

*/
type ListAccounts struct {
	Context *middleware.Context
	Handler ListAccountsHandler
}

func (o *ListAccounts) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListAccountsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
