// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAccountByNumberHandlerFunc turns a function with the right signature into a get account by number handler
type GetAccountByNumberHandlerFunc func(GetAccountByNumberParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAccountByNumberHandlerFunc) Handle(params GetAccountByNumberParams) middleware.Responder {
	return fn(params)
}

// GetAccountByNumberHandler interface for that can handle valid get account by number params
type GetAccountByNumberHandler interface {
	Handle(GetAccountByNumberParams) middleware.Responder
}

// NewGetAccountByNumber creates a new http.Handler for the get account by number operation
func NewGetAccountByNumber(ctx *middleware.Context, handler GetAccountByNumberHandler) *GetAccountByNumber {
	return &GetAccountByNumber{Context: ctx, Handler: handler}
}

/*GetAccountByNumber swagger:route GET /users/{owner}/accounts/{number} accounts getAccountByNumber

Get account details

*/
type GetAccountByNumber struct {
	Context *middleware.Context
	Handler GetAccountByNumberHandler
}

func (o *GetAccountByNumber) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAccountByNumberParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
