// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListTransactionsReceivedHandlerFunc turns a function with the right signature into a list transactions received handler
type ListTransactionsReceivedHandlerFunc func(ListTransactionsReceivedParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListTransactionsReceivedHandlerFunc) Handle(params ListTransactionsReceivedParams) middleware.Responder {
	return fn(params)
}

// ListTransactionsReceivedHandler interface for that can handle valid list transactions received params
type ListTransactionsReceivedHandler interface {
	Handle(ListTransactionsReceivedParams) middleware.Responder
}

// NewListTransactionsReceived creates a new http.Handler for the list transactions received operation
func NewListTransactionsReceived(ctx *middleware.Context, handler ListTransactionsReceivedHandler) *ListTransactionsReceived {
	return &ListTransactionsReceived{Context: ctx, Handler: handler}
}

/*ListTransactionsReceived swagger:route GET /transactions/account/{receiver}/received transactions listTransactionsReceived

Lists all transactions sent to a given account

Lists all transactions sent to a given account

*/
type ListTransactionsReceived struct {
	Context *middleware.Context
	Handler ListTransactionsReceivedHandler
}

func (o *ListTransactionsReceived) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListTransactionsReceivedParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
