// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListTransactionsSentHandlerFunc turns a function with the right signature into a list transactions sent handler
type ListTransactionsSentHandlerFunc func(ListTransactionsSentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListTransactionsSentHandlerFunc) Handle(params ListTransactionsSentParams) middleware.Responder {
	return fn(params)
}

// ListTransactionsSentHandler interface for that can handle valid list transactions sent params
type ListTransactionsSentHandler interface {
	Handle(ListTransactionsSentParams) middleware.Responder
}

// NewListTransactionsSent creates a new http.Handler for the list transactions sent operation
func NewListTransactionsSent(ctx *middleware.Context, handler ListTransactionsSentHandler) *ListTransactionsSent {
	return &ListTransactionsSent{Context: ctx, Handler: handler}
}

/*ListTransactionsSent swagger:route GET /transactions/account/{sender}/sent transactions listTransactionsSent

Lists all transactions sent from a given account

Lists all transactions sent from a given account

*/
type ListTransactionsSent struct {
	Context *middleware.Context
	Handler ListTransactionsSentHandler
}

func (o *ListTransactionsSent) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListTransactionsSentParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
